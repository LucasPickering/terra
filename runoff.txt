1. Start at highest tile (by elev)
    1. Push ALL water to tiles with lower elevation (Push water into ocean when possible)
2. Water collects in basins where lakes should form
    1. For each lake basin, cluster tiles that should form a lake
    2. Split the water among each cluster

Problems
--------
Overly complex?
Could have a basin that is larger than that the runoff can fill - complicates clustering



1. Start at highest tile (by water elev)
    1. Equalize water between each tile and its lower neighbors (Push water into ocean when possible)
    2. Go to next tile in list (DON'T RE-SORT LIST AFTER EACH EQUALIZATION)
2. Repeat x times (alternative: repeat until no changes occur)

Problems
--------
Requires indefinite # of iterations
May create infinite loop?



1. Take highest tile (by water elev) - this is your source tile
    1. If tile has no water, go to next in list
    2. Equalize water across tile and ALL neighbors
    3. Go to neighbors, starting at lowest (by water elev) and push out from each one
    4. Repeat with DFS
2. Go to 1


Problems
--------
Indefinite amount of iterations
Might not be complete? Tile could get water pushed onto it after being marked complete
Doesn't properly equalize for lakes - only equalizes over a 1-radius area


